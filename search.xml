<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[web前端网站性能优化]]></title>
      <url>%2F2017%2F03%2F11%2Fweb%E5%89%8D%E7%AB%AF%E7%BD%91%E7%AB%99%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%2F</url>
      <content type="text"><![CDATA[一 css、js文件的数量和文件大小 css js 文件需要外联，按模块或者功能加载js文件，减少重复性代码 二 背景图片的数量以及大小 可以采用精灵图(sprite)或者PNG8，以及webp格式 三 对html代码要语义化，利于网站爬虫的seo四 减少http请求五 代码布局 css样式至于顶部，js效果置于底部，减少DOM访问，]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[web优化加载速度]]></title>
      <url>%2F2017%2F03%2F11%2Fweb%E4%BC%98%E5%8C%96%E5%8A%A0%E8%BD%BD%E9%80%9F%E5%BA%A6%2F</url>
      <content type="text"><![CDATA[一 使用良好的页面结构 可以使用HTML减少使用XHTML 二 不要使用布局超载 不让页面中充斥着各种类型的图片、视频、广告 三 不要使用图像来代替文本 常见于在导航中用图像来代替简单的文字，让导航变的美观，但是它的加载速度慢，也不利于搜索引擎，所以尽量不要使用，实在要是用的话可以使用CSS技巧创建 四 把js代码外置五 删除不必要的元素 一个页面的功能要单一，把不同功能的页面进行分页 六 尽量使用PNG图像，不过也可以使用webp这种图片格式七 优化css代码同样也需要外链]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[hexo搭建博客]]></title>
      <url>%2F2016%2F12%2F28%2Fhexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%2F</url>
      <content type="text"><![CDATA[hexo 搭建博客准备工作 安装nodejs 注册github账号 新建仓库 名字为 用户名.github.io 安装git或者svn 注册一个域名（也可以不注册） 在电脑任意地方打开安装好的gitbash： 打开 Git Bash，输入下面的命令，表示你这台机器上所有的 Git 仓库都会使用这个账户操作 命令： 123456789101112131415$ git config --global user.name "Your Name"$ git config --global user.email "email@example.com"your Name 是你的github用户名email@example.com 是你注册github账号时用的邮箱如果需要查看当前设置的用户名和邮箱，分别执行下面的操作$ git config user.name$ git config user.email如果需要查看当前设置的用户名和邮箱，分别执行下面的操作$ git config --global user.name "username"$ git config --global user.email "email" 关联github账号1234567891011121314ssh-keygen -t rsa -C &quot;你的Github邮箱&quot;输入三次回车键就会生成一个秘钥1进入到本地 C:\Users\Administrator\.ssh 文件夹下,找到 id_rsa.pub 这个文件，使用记事本即可打开，复制全部代码。2 接下来，打开GitHub，选择 Settings——SSH and GPG keys——New SSH key，将我们刚刚复制的 id_rsa.pub 中的内容粘贴到Key中，Title可以自定义。3 输入密码 即可4 回到 Git 中，输入下面的命令： $ ssh -T git@github.com输入yes如果返回的是你的github用户名 说明已经绑定完毕这个命令是检测你的github是否和本机已经关联 安装hexo 1 如果安装速度慢 可以先设置淘宝镜像 在cmd或者git输入命令：$ npm install -g cnpm –registry=https://registry.npm.taobao.org 2在本机任意一个磁盘新建一个文件夹 然后打开cmd或者git输入命令 ： cnpm install hexo -g 3 初始化hexo heox init 4 生成静态文件 hexo g 5 打开本地进行调试 hexo -s 在浏览器输入地址localhost:4000 就能看到hexo的默认主题 修改站点配置文件找到你安装hexo文件夹中的_config.yml 打开之后再最后deploy: type: git repository: git@github.com:github用户名/github用户名.github.io.git branch: master 修改完毕之后保存即可 安装提交工具 输入命令 npm install hexo-deployer-git –save 再次输入命令提交你的静态文件 命令：hexo d 此时你就可通过你的github仓库的名字来访问你的网站了 如果你要绑定你的域名 需要在站点的E:\git\source（E:\git这个是你安装hexo的地址）中新建一个CNAME的文件，在里面写上你的域名 然后 保存（不加上你的协议名），再次提交 hexo d打开你域名注册的地方 举例 阿里云 1 找到你的域名管理 2 点击域名 进入域名管理界面 选择上方的域名解析 3 如果之前有东西，要全部删掉 4 在记录类型这里输入CNAME 主机记录 输入@ 记录值输入 你的 github带有io后缀的仓库名；再次在记录类型这里输入CNAME 主机记录 输入www 记录值输入 你的 github带有io后缀的仓库名—–保存即可 5 在浏览器地址栏输入你的域名即可访问你的博客了 写文章 1 在你安装hexo的文件下 打开cmd或者gitbash 输入 命令hexo n “文件名” 2 然后会在source 文件夹下看到新建的md文件 3 hexo g 生成静态文件 4 hexo s 查看预览文件 5 hexo d 发布文件开发手册地址 官方开发文档链接]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[基础笔记]]></title>
      <url>%2F2016%2F12%2F28%2Fnote%2F</url>
      <content type="text"><![CDATA[hexo 基础笔记获取样式的兼容性IE浏览器支持 currentStyle，非IE支持getComputedStyle(tag,null)[]attr]1234 function getStyle(tag, attr) &#123; return tag.currentStyle ? tag.currentStyle[attr] : getComputedStyle(tag, null)[attr]; &#125;&#125; 获取元素中的纯文本 tag.innerText IE低版本浏览器支持 其他的浏览器用 tag.textContent1234567891011 function getText(tag) &#123; if (tag.innerText) &#123; return tag.innerText; &#125; else &#123; return tag.textContent; &#125; &#125;//或者写成三元表达式 function getText(tag) &#123; return tag.innerText?tag.innerText:tag.textContent; &#125; 根据类名获取元素 正常情况是 1document.getElementsByClassName("类名")； 因为一些浏览器不支持该属性要自己封装一个方法 12345678910111213141516171819202122232425262728293031323334function getClass(cls) &#123; //首先做什么？ //1 检测浏览器是否支持document.getElementsByClassName //如果支持，就直接使用。如果不支持就自己写代码实现这个功能 // 检测方式：可以检测getElementsByClassName 是不是函数类型 if (typeof document.getElementsByClassName == "function") &#123; return document.getElementsByClassName(cls); &#125; else &#123; //目标：根据类名找元素 //1 先找到body中的所有标签，获取结果是伪数组，不能使用数组方法 var tags = document.body.getElementsByTagName("*"); //2 让tags中的每一个标签的类名属性跟cls比較 //创建数组保存，自己创建的是数组，可以使用数组方法 var tagsArr = []; //3 遍历所有标签 for (var i = 0; i &lt; tags.length; i++) &#123; //4 有可能某些类名是多个，使用了空格分开 //整体比較就不准确，根据空格将类名属性分割，检测每一个部分,temp保存的类名 var temp = tags[i].className; //将temp使用空格分开 var items = temp.split(" "); for (var j = 0; j &lt; items.length; j++) &#123; //检测类名中的某一部分是否和参数相同 if (items[j] == cls) &#123; tagsArr.push(tags[i]); break; &#125; &#125; &#125; //6 将结果返回 return tagsArr; &#125; &#125; 获取父节点 tag.parentNode获取所有子节点 tag.childNodes 这里的节点包括空格获取所有元素子节点 tag.children获取第一个子节点 tag.firstChild 这里的第一个子节点是空格获取第一个元素子节点 tag.children[0] 获取最后一个元素子节点 tag.children[tag.children.length-1] 插入新节点 tag.insertBefore(要插入的节点，插入哪个节点之前) 键盘抬起来触发的事件 onkeyup ex: document.onkeyupe.stopPropagation() 这个是阻止事件冒泡 IE浏览器中没有事件捕获事件冒泡是从里往外执行事件事件不活是从外往里执行事件 IE浏览器中用window.event.cancelBubble = true来阻止事件冒泡事件兼容对象 非IE浏览器 事件对象是e IE的事件对象是 window.event获取页面卷曲高度123456function winSroll() &#123; return &#123; left: window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0, top: window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0 &#125;; &#125; 获取可视区域鼠标横纵坐标 在使用的时候e是必须要传的参数 否则会报错123456789function getPX(e) &#123; //组成是clientX + scrollX return e.clientX;&#125;function getPY(e) &#123; return e.clientY;&#125; js问题总结 入口函数只能有一个，其余的会被覆盖 dom操作比较复杂 兼容性问题太多 制作简单的动画相对困难 容错性差jq的入口函数写法 123456789$(document).ready(function () &#123; &#125;);//第二种书写方式$(function () &#123; &#125;); 过滤选择器123456789 //过滤选择器（都是索引）（不要使用正常人的思维去考虑编程问题） //选中奇数的索引，设置颜色 // $("#list&gt;li:odd").css("backgroundColor", "red"); //选中偶数索引// $("#list&gt;li:even").css("backgroundColor", "pink"); //:eq(索引值)选择某一个元素// $("#list&gt;li:eq(3)").text("我是索引值为1的元素"); jq中动画 animate1234567891011121314151617181920212223 $(function () &#123; $("#btn1").click(function () &#123; //第一个参数是要改变哪些值 （必选） //第二个参数是运动时间 （可选） 默认是normal 400 //第三个参数表示运动模式 linear匀速 swing缓动 （可选）默认是缓动（先慢后快再慢） //第四个参数回调函数，运动完了再执行 （可选） $("#box1").animate(&#123; "left": "800px", "opacity": 0.4 &#125;, 1000, "linear"); &#125;); &#125;); ``` ## jq中获取属性 .prop .attr .prop只能获取自带的属性例如calss .attr只能获取自定义的属性# PHP 复习内容## 输出方式 ```php echo var_dump() print_r(); 检验数组当中是否存在某个元素 in_aray() 存在这个元素就返回true 12345- $flag=in_array("元素",数组名);- array_key_exists () 用于关联数组 ``php $array=array("username"=&gt;"shanshanlaichi","age"=&gt;11); $flag=array_key_exists("username",$array); file_get_contents(“file.txt”) 获取文件里面的内容 获取文件 文件上传必须是1表单提交2post条件 3input的类型是file 4表单的属性要设置一个encType=”multipart/form-data”1$_FILES 上传文件123456789$data=$_FILES["lifephoto"]; // var_dump($data); //获取到apache 临时存储的文件. $file=$data["tmp_name"]; //获取到文件名 $fileName=$data["name"]; move_uploaded_file($file,"images/".$fileName); 状态码 200 代表成功 404 没有找到资源 500 代表服务器内部错误 405 请求方式不支持 设置属性 img.setAttribute(“src”,src); 将json数据转换成JavaScript对象 api 是 JSON.parse()在jq中 为获取表单中所有的数据提供了两个方法 serialize()（序列化） 和serializeArray(),只用在form表单中 serialize()//调用这个方法，返回当前表单里面用户输入的数据. //并且会拼接好字符串. serializeArray() 序列化数组，把当前表单里面的内容组装成一个数组.]]></content>
    </entry>

    
  
  
</search>
